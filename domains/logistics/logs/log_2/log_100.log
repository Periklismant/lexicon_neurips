2025-05-16 10:55:34,410 - INFO - 
================= Seed: 100 =================

2025-05-16 10:55:34,727 - INFO - problem name = Logistics

types = [Obj, Location, City, Package - Obj, Truck - Obj, Airplane - Obj, Airport - Location]

fluents = [
  bool at[obj=Obj, loc=Location]
  bool in[obj1=Obj, obj2=Obj]
  bool inCity[obj=Location, city=City]
]

actions = [
  action loadTruck(Package - Obj obj, Truck - Obj truck, Location loc) {
    preconditions = [
      at(truck, loc)
      at(obj, loc)
    ]
    effects = [
      at(obj, loc) := false
      in(obj, truck) := true
    ]
  }
  action loadAirplane(Package - Obj obj, Airplane - Obj airplane, Location loc) {
    preconditions = [
      at(obj, loc)
      at(airplane, loc)
    ]
    effects = [
      at(obj, loc) := false
      in(obj, airplane) := true
    ]
  }
  action unloadTruck(Obj obj, Truck - Obj truck, Location loc) {
    preconditions = [
      at(truck, loc)
      in(obj, truck)
    ]
    effects = [
      in(obj, truck) := false
      at(obj, loc) := true
    ]
  }
  action unloadAirplane(Obj obj, Airplane - Obj airplane, Location loc) {
    preconditions = [
      in(obj, airplane)
      at(airplane, loc)
    ]
    effects = [
      in(obj, airplane) := false
      at(obj, loc) := true
    ]
  }
  action driveTruck(Truck - Obj truck, Location loc_from, Location loc_to, City city) {
    preconditions = [
      at(truck, loc_from)
      inCity(loc_from, city)
      inCity(loc_to, city)
    ]
    effects = [
      at(truck, loc_from) := false
      at(truck, loc_to) := true
    ]
  }
  action flyAirplane(Airplane - Obj airplane, Airport - Location loc_from, Airport - Location loc_to) {
    preconditions = [
      at(airplane, loc_from)
    ]
    effects = [
      at(airplane, loc_from) := false
      at(airplane, loc_to) := true
    ]
  }
]

objects = [
  Obj: [a1, a2, t1, t2, p1, p2]
  Location: [l1_1, l1_2, l1_3, l1_4, l1_5, l2_1, l2_2, l2_3, l2_4, l2_5]
  City: [c1, c2]
  Package - Obj: [p1, p2]
  Truck - Obj: [t1, t2]
  Airplane - Obj: [a1, a2]
  Airport - Location: [l1_1, l2_1]
]

initial fluents default = [
  bool at[obj=Obj, loc=Location] := false
  bool in[obj1=Obj, obj2=Obj] := false
  bool inCity[obj=Location, city=City] := false
]

initial values = [
  inCity(l1_1, c1) := true
  inCity(l1_2, c1) := true
  inCity(l1_3, c1) := true
  inCity(l1_4, c1) := true
  inCity(l1_5, c1) := true
  inCity(l2_1, c2) := true
  inCity(l2_2, c2) := true
  inCity(l2_3, c2) := true
  inCity(l2_4, c2) := true
  inCity(l2_5, c2) := true
  at(t1, l1_2) := true
  at(t2, l2_4) := true
  at(p1, l2_2) := true
  at(p2, l2_3) := true
  at(a1, l1_1) := true
  at(a2, l2_1) := true
  at(a2, l1_1) := false
  at(t1, l1_1) := false
  at(t2, l1_1) := false
  at(p1, l1_1) := false
  at(p2, l1_1) := false
  at(a1, l1_2) := false
  at(a2, l1_2) := false
  at(t2, l1_2) := false
  at(p1, l1_2) := false
  at(p2, l1_2) := false
  at(a1, l1_3) := false
  at(a2, l1_3) := false
  at(t1, l1_3) := false
  at(t2, l1_3) := false
  at(p1, l1_3) := false
  at(p2, l1_3) := false
  at(a1, l1_4) := false
  at(a2, l1_4) := false
  at(t1, l1_4) := false
  at(t2, l1_4) := false
  at(p1, l1_4) := false
  at(p2, l1_4) := false
  at(a1, l1_5) := false
  at(a2, l1_5) := false
  at(t1, l1_5) := false
  at(t2, l1_5) := false
  at(p1, l1_5) := false
  at(p2, l1_5) := false
  at(a1, l2_1) := false
  at(t1, l2_1) := false
  at(t2, l2_1) := false
  at(p1, l2_1) := false
  at(p2, l2_1) := false
  at(a1, l2_2) := false
  at(a2, l2_2) := false
  at(t1, l2_2) := false
  at(t2, l2_2) := false
  at(p2, l2_2) := false
  at(a1, l2_3) := false
  at(a2, l2_3) := false
  at(t1, l2_3) := false
  at(t2, l2_3) := false
  at(p1, l2_3) := false
  at(a1, l2_4) := false
  at(a2, l2_4) := false
  at(t1, l2_4) := false
  at(p1, l2_4) := false
  at(p2, l2_4) := false
  at(a1, l2_5) := false
  at(a2, l2_5) := false
  at(t1, l2_5) := false
  at(t2, l2_5) := false
  at(p1, l2_5) := false
  at(p2, l2_5) := false
  in(a1, a1) := false
  in(a2, a1) := false
  in(t1, a1) := false
  in(t2, a1) := false
  in(p1, a1) := false
  in(p2, a1) := false
  in(a1, a2) := false
  in(a2, a2) := false
  in(t1, a2) := false
  in(t2, a2) := false
  in(p1, a2) := false
  in(p2, a2) := false
  in(a1, t1) := false
  in(a2, t1) := false
  in(t1, t1) := false
  in(t2, t1) := false
  in(p1, t1) := false
  in(p2, t1) := false
  in(a1, t2) := false
  in(a2, t2) := false
  in(t1, t2) := false
  in(t2, t2) := false
  in(p1, t2) := false
  in(p2, t2) := false
  in(a1, p1) := false
  in(a2, p1) := false
  in(t1, p1) := false
  in(t2, p1) := false
  in(p1, p1) := false
  in(p2, p1) := false
  in(a1, p2) := false
  in(a2, p2) := false
  in(t1, p2) := false
  in(t2, p2) := false
  in(p1, p2) := false
  in(p2, p2) := false
  inCity(l2_1, c1) := false
  inCity(l2_2, c1) := false
  inCity(l2_3, c1) := false
  inCity(l2_4, c1) := false
  inCity(l2_5, c1) := false
  inCity(l1_1, c2) := false
  inCity(l1_2, c2) := false
  inCity(l1_3, c2) := false
  inCity(l1_4, c2) := false
  inCity(l1_5, c2) := false
]

goals = [
  at(p1, l2_5)
  at(p2, l1_5)
]

quality metrics = [
  minimize sequential-plan-length
]


2025-05-16 10:55:34,729 - INFO - Generating plan for unconstrained problem

2025-05-16 10:55:34,729 - INFO - Unconstrained plan generation time: 0.0

2025-05-16 10:55:34,729 - INFO - Unconstrained plan and cost: 
2025-05-16 10:55:34,729 - INFO - SequentialPlan:
    driveTruck(t2, l2_4, l2_3, c2)
    loadTruck(p2, t2, l2_3)
    driveTruck(t2, l2_3, l2_1, c2)
    unloadTruck(p2, t2, l2_1)
    loadAirplane(p2, a2, l2_1)
    flyAirplane(a2, l2_1, l1_1)
    driveTruck(t2, l2_1, l2_2, c2)
    driveTruck(t1, l1_2, l1_1, c1)
    loadTruck(p1, t2, l2_2)
    driveTruck(t2, l2_2, l2_5, c2)
    unloadAirplane(p2, a2, l1_1)
    loadTruck(p2, t1, l1_1)
    driveTruck(t1, l1_1, l1_5, c1)
    unloadTruck(p1, t2, l2_5)
    unloadTruck(p2, t1, l1_5)
2025-05-16 10:55:34,729 - INFO - 15
2025-05-16 10:55:36,083 - INFO - Sampled constraints:

2025-05-16 10:55:36,083 - INFO - Sometime((at(p2, l2_4) and in(p1, t1)))
2025-05-16 10:55:36,083 - INFO - Sometime(at(p2, l1_1))
2025-05-16 10:55:36,083 - INFO - Sometime-Before(at(p2, l1_1), at(p2, l1_5))
2025-05-16 10:55:36,083 - INFO - 
2025-05-16 10:55:36,083 - INFO - Generation time: 1.3540420532226562

2025-05-16 10:55:36,084 - INFO - Generating plan for constrained problem (with LiftedTCORE).

2025-05-16 10:55:36,096 - INFO - LiftedTCORE compilation time: 0.011725187301635742

2025-05-16 10:55:36,526 - INFO - Planning Time with LiftedTCORE's file: 0.4307372570037842

