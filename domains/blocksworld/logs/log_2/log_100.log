2025-05-16 11:29:12,977 - INFO - 
================= Seed: 100 =================

2025-05-16 11:29:13,337 - INFO - problem name = BlocksWorld

types = [Block]

fluents = [
  bool clear[obj=Block]
  bool ontable[obj=Block]
  bool handEmpty
  bool holding[obj=Block]
  bool on[obj1=Block, obj2=Block]
]

actions = [
  action pickup(Block obj) {
    preconditions = [
      clear(obj)
      ontable(obj)
      handEmpty
    ]
    effects = [
      holding(obj) := true
      clear(obj) := false
      ontable(obj) := false
      handEmpty := false
    ]
  }
  action putdown(Block obj) {
    preconditions = [
      holding(obj)
    ]
    effects = [
      clear(obj) := true
      handEmpty := true
      ontable(obj) := true
      holding(obj) := false
    ]
  }
  action stack(Block obj, Block underObj) {
    preconditions = [
      clear(underObj)
      holding(obj)
    ]
    effects = [
      handEmpty := true
      clear(obj) := true
      on(obj, underObj) := true
      clear(underObj) := false
      holding(obj) := false
    ]
  }
  action unstack(Block obj, Block underObj) {
    preconditions = [
      on(obj, underObj)
      clear(obj)
      handEmpty
    ]
    effects = [
      holding(obj) := true
      clear(underObj) := true
      on(obj, underObj) := false
      clear(obj) := false
      handEmpty := false
    ]
  }
]

objects = [
  Block: [green_block_1, black_block_1, black_block_2, green_block_2, purple_block_1]
]

initial fluents default = [
  bool clear[obj=Block] := true
  bool ontable[obj=Block] := false
  bool handEmpty := true
  bool holding[obj=Block] := false
  bool on[obj1=Block, obj2=Block] := false
]

initial values = [
  ontable(green_block_1) := true
  on(black_block_1, green_block_1) := true
  clear(green_block_1) := false
  ontable(black_block_2) := true
  on(green_block_2, black_block_2) := true
  clear(black_block_2) := false
  ontable(purple_block_1) := true
  clear(black_block_1) := true
  clear(green_block_2) := true
  clear(purple_block_1) := true
  ontable(black_block_1) := false
  ontable(green_block_2) := false
  handEmpty := true
  holding(green_block_1) := false
  holding(black_block_1) := false
  holding(black_block_2) := false
  holding(green_block_2) := false
  holding(purple_block_1) := false
  on(green_block_1, green_block_1) := false
  on(black_block_2, green_block_1) := false
  on(green_block_2, green_block_1) := false
  on(purple_block_1, green_block_1) := false
  on(green_block_1, black_block_1) := false
  on(black_block_1, black_block_1) := false
  on(black_block_2, black_block_1) := false
  on(green_block_2, black_block_1) := false
  on(purple_block_1, black_block_1) := false
  on(green_block_1, black_block_2) := false
  on(black_block_1, black_block_2) := false
  on(black_block_2, black_block_2) := false
  on(purple_block_1, black_block_2) := false
  on(green_block_1, green_block_2) := false
  on(black_block_1, green_block_2) := false
  on(black_block_2, green_block_2) := false
  on(green_block_2, green_block_2) := false
  on(purple_block_1, green_block_2) := false
  on(green_block_1, purple_block_1) := false
  on(black_block_1, purple_block_1) := false
  on(black_block_2, purple_block_1) := false
  on(green_block_2, purple_block_1) := false
  on(purple_block_1, purple_block_1) := false
]

goals = [
  ontable(black_block_1)
]

quality metrics = [
  minimize sequential-plan-length
]


2025-05-16 11:29:13,339 - INFO - Generating plan for unconstrained problem

2025-05-16 11:29:13,339 - INFO - Unconstrained plan generation time: 2.384185791015625e-07

2025-05-16 11:29:13,339 - INFO - Unconstrained plan and cost: 
2025-05-16 11:29:13,339 - INFO - SequentialPlan:
    unstack(black_block_1, green_block_1)
    putdown(black_block_1)
2025-05-16 11:29:13,339 - INFO - 2
2025-05-16 11:29:13,772 - INFO - Sampled constraints:

2025-05-16 11:29:13,772 - INFO - Sometime(((not ontable(purple_block_1)) and holding(green_block_1)))
2025-05-16 11:29:13,773 - INFO - Sometime((not on(purple_block_1, black_block_2)))
2025-05-16 11:29:13,773 - INFO - Sometime-After((not on(purple_block_1, black_block_2)), holding(black_block_1))
2025-05-16 11:29:13,773 - INFO - 
2025-05-16 11:29:13,773 - INFO - Generation time: 0.43327784538269043

2025-05-16 11:29:13,773 - INFO - Generating plan for constrained problem (with LiftedTCORE).

2025-05-16 11:29:13,781 - INFO - LiftedTCORE compilation time: 0.0077517032623291016

2025-05-16 11:29:14,185 - INFO - Planning Time with LiftedTCORE's file: 0.40398359298706055

2025-05-16 11:29:14,185 - INFO - Plan found with LiftedTCORE + sym_bd: SequentialPlan:
    unstack(green_block_2, black_block_2)
    putdown(green_block_2)
    pickup(purple_block_1)
    stack(purple_block_1, black_block_2)
    unstack(black_block_1, green_block_1)
    putdown(black_block_1)
    pickup(green_block_1)
2025-05-16 11:29:14,185 - INFO - Seed: 100 is solvable

2025-05-16 11:29:14,185 - INFO - Unconstrained cost: 2
2025-05-16 11:29:14,185 - INFO - Constrained cost: 7
2025-05-16 11:29:14,186 - INFO - Seed: 100 Plan simulation is feasible
2025-05-16 11:29:14,186 - INFO - 
Seed: 100 
 Plan: [unstack(green_block_2, black_block_2), putdown(green_block_2), pickup(purple_block_1), stack(purple_block_1, black_block_2), unstack(black_block_1, green_block_1), putdown(black_block_1), pickup(green_block_1)]  
 Cost: 7

2025-05-16 11:29:14,239 - INFO - Time for Translating the Constrained Problem into NL: 0.000820159912109375

