Let's break down the problem step by step to find an optimal plan that achieves the goal while satisfying the given constraints.

### Initial State:
- grey_block_1: on table
- brown_block_1: on grey_block_1
- purple_block_1: on table
- yellow_block_1: on purple_block_1
- grey_block_2: on brown_block_1
- yellow_block_2: on yellow_block_1
- purple_block_2: on table (clear)
- Arm: empty

### Goal:
- yellow_block_1 is on top of brown_block_1

### Constraints:
- At some point in the plan, the following must hold:
  - purple_block_1 is on top of brown_block_1
  - grey_block_2 is on top of grey_block_1

### Step-by-Step Plan:
1. To achieve the goal, we need to move yellow_block_1 to brown_block_1. Currently, yellow_block_1 is under yellow_block_2 on purple_block_1. So, we first need to clear yellow_block_1 by removing yellow_block_2.
2. Then, we need to move yellow_block_1 to brown_block_1. However, brown_block_1 currently has grey_block_2 on it, so we need to clear brown_block_1 by moving grey_block_2 elsewhere.
3. The constraint requires that at some point, purple_block_1 is on brown_block_1 and grey_block_2 is on grey_block_1. This suggests that we should first move grey_block_2 to grey_block_1 and purple_block_1 to brown_block_1, then later move purple_block_1 away to place yellow_block_1 on brown_block_1.

### Optimal Plan:
```
```
unstack grey_block_2 brown_block_1
putdown grey_block_2
unstack yellow_block_2 yellow_block_1
putdown yellow_block_2
pickup yellow_block_1
stack yellow_block_1 brown_block_1
```
```

However, this plan doesn't satisfy the constraint. Let's adjust it to meet the constraint:

### Adjusted Plan:
```
```
unstack grey_block_2 brown_block_1
stack grey_block_2 grey_block_1
unstack yellow_block_2 yellow_block_1
putdown yellow_block_2
pickup purple_block_1
stack purple_block_1 brown_block_1
unstack purple_block_1 brown_block_1
putdown purple_block_1
pickup yellow_block_1
stack yellow_block_1 brown_block_1
```
```

### Explanation:
1. First, we unstack grey_block_2 from brown_block_1 and stack it on grey_block_1 to satisfy part of the constraint.
2. Then, we unstack yellow_block_2 from yellow_block_1 and put it down to clear yellow_block_1.
3. Next, we pick up purple_block_1 and stack it on brown_block_1 to satisfy the other part of the constraint (purple_block_1 on brown_block_1 and grey_block_2 on grey_block_1).
4. After satisfying the constraint, we unstack purple_block_1 from brown_block_1 to free up brown_block_1 for yellow_block_1.
5. Finally, we pick up yellow_block_1 and stack it on brown_block_1 to achieve the goal.

This plan is optimal because it satisfies the constraint and achieves the goal in the fewest possible steps (9 actions). No shorter plan can satisfy both the goal and the constraint.

### Final Answer:
```
```
unstack grey_block_2 brown_block_1
stack grey_block_2 grey_block_1
unstack yellow_block_2 yellow_block_1
putdown yellow_block_2
pickup purple_block_1
stack purple_block_1 brown_block_1
unstack purple_block_1 brown_block_1
putdown purple_block_1
pickup yellow_block_1
stack yellow_block_1 brown_block_1
```
```