Let's break down the problem step by step to find an optimal plan that satisfies the given constraints.

### Initial State:
- yellow_block_1: on table
- brown_block_1: on table, with purple_block_1 on top, then black_block_1, then green_block_1
- brown_block_2: on top of yellow_block_1, clear
- purple_block_1: on top of brown_block_1
- black_block_1: on top of purple_block_1
- orange_block_1: on table, clear
- green_block_1: on top of black_block_1, clear
- Arm: empty

### Goal:
- brown_block_1 is on top of orange_block_1

### Constraints:
1. At some point in the plan, both of the following must be true:
   - "you are holding brown_block_2"
   - "orange_block_1 is on top of brown_block_1"

### Plan Steps:
1. To satisfy the constraint, we need to have "orange_block_1 on top of brown_block_1" at some point. However, in the initial state, brown_block_1 has purple_block_1 on top, so we need to unstack the tower on brown_block_1 first.
2. We also need to pick up brown_block_2 at some point to satisfy the constraint.

### Optimal Plan:
Here's the step-by-step plan:

```
```
1. unstack green_block_1 black_block_1
2. putdown green_block_1
3. unstack black_block_1 purple_block_1
4. putdown black_block_1
5. unstack purple_block_1 brown_block_1
6. putdown purple_block_1
7. pickup orange_block_1
8. stack orange_block_1 brown_block_1
9. pickup brown_block_2
10. unstack orange_block_1 brown_block_1
11. putdown orange_block_1
12. stack brown_block_1 orange_block_1
```

### Explanation:
1. **Steps 1-6**: Unstack the tower on brown_block_1 (green_block_1, black_block_1, purple_block_1) to free brown_block_1.
2. **Step 7-8**: Pick up orange_block_1 and stack it on brown_block_1. This satisfies part of the constraint ("orange_block_1 is on top of brown_block_1").
3. **Step 9**: Pick up brown_block_2. Now both parts of the constraint are satisfied ("you are holding brown_block_2" and "orange_block_1 is on top of brown_block_1").
4. **Steps 10-12**: Unstack orange_block_1 from brown_block_1, put it down, and then stack brown_block_1 on orange_block_1 to achieve the goal.

This plan is optimal because it achieves the goal in the fewest steps while satisfying the constraint. No shorter plan can satisfy the constraint and achieve the goal.