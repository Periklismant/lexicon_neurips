(define (domain liftedtcore_blocksworld-domain)
 (:requirements :strips :typing :negative-preconditions :disjunctive-preconditions :equality :conditional-effects :action-costs)
 (:types block)
 (:constants
   yellow_block_1 blue_block_1 yellow_block_2 red_block_2 green_block_1 green_block_2 red_block_1 - block
 )
 (:predicates (clear ?obj - block) (ontable ?obj - block) (handempty) (holding ?obj - block) (on ?obj1 - block ?obj2 - block) (hold_0) (hold_1) (seen_psi_2) (hold_3) (hold_4) (hold_5) (hold_6) (seen_psi_7) (hold_8) (seen_psi_9) (hold_10) (hold_11) (hold_12) (hold_13) (hold_14) (seen_psi_15))
 (:functions (total-cost))
 (:action pickup
  :parameters ( ?obj - block)
  :precondition (and (clear ?obj) (ontable ?obj) (handempty) (or (not (or (= ?obj red_block_1) (holding red_block_1))) (seen_psi_2)) (or (not (and (ontable red_block_1) (not (= ?obj red_block_1)))) (seen_psi_7)) (or (and (clear red_block_1) (not (= ?obj red_block_1))) (seen_psi_9)) (or (not (and (clear green_block_1) (not (= ?obj green_block_1)))) (seen_psi_15)))
  :effect (and (holding ?obj) (not (clear ?obj)) (not (ontable ?obj)) (not (handempty)) (when (or (= ?obj red_block_1) (holding red_block_1)) (hold_1)) (when (and (on yellow_block_1 blue_block_1) (not (and (ontable red_block_2) (not (= ?obj red_block_2))))) (hold_3)) (when (not (and (ontable green_block_1) (not (= ?obj green_block_1)))) (hold_4)) (when (and (not (and (ontable green_block_1) (not (= ?obj green_block_1)))) (clear blue_block_1) (not (= ?obj blue_block_1))) (not (hold_5))) (when (not (and (clear blue_block_1) (not (= ?obj blue_block_1)))) (hold_5)) (when (and (ontable red_block_1) (not (= ?obj red_block_1))) (hold_6)) (when (not (and (ontable green_block_1) (not (= ?obj green_block_1)))) (seen_psi_7)) (when (not (and (clear red_block_1) (not (= ?obj red_block_1)))) (hold_8)) (when (or (= ?obj yellow_block_2) (holding yellow_block_2)) (seen_psi_9)) (when (or (= ?obj green_block_2) (holding green_block_2)) (hold_10)) (when (or (= ?obj yellow_block_2) (holding yellow_block_2) (and (ontable yellow_block_1) (not (= ?obj yellow_block_1)))) (hold_11)) (when (not (and (clear yellow_block_2) (not (= ?obj yellow_block_2)))) (hold_12)) (when (and (not (and (clear yellow_block_2) (not (= ?obj yellow_block_2)))) (not (or (= ?obj green_block_2) (holding green_block_2)))) (not (hold_13))) (when (or (= ?obj green_block_2) (holding green_block_2)) (hold_13)) (when (and (clear green_block_1) (not (= ?obj green_block_1))) (hold_14)) (when (and (clear yellow_block_2) (not (= ?obj yellow_block_2)) (not (and (clear yellow_block_1) (not (= ?obj yellow_block_1))))) (seen_psi_15)) (increase (total-cost) 1)))
 (:action putdown
  :parameters ( ?obj - block)
  :precondition (and (holding ?obj) (or (not (and (holding red_block_1) (not (= ?obj red_block_1)))) (seen_psi_2)) (or (not (or (= ?obj red_block_1) (ontable red_block_1))) (seen_psi_7)) (or (= ?obj red_block_1) (clear red_block_1) (seen_psi_9)) (or (not (or (= ?obj green_block_1) (clear green_block_1))) (seen_psi_15)))
  :effect (and (clear ?obj) (handempty) (ontable ?obj) (not (holding ?obj)) (when (and (holding red_block_1) (not (= ?obj red_block_1))) (hold_1)) (when (and (on yellow_block_1 blue_block_1) (not (or (= ?obj red_block_2) (ontable red_block_2)))) (hold_3)) (when (not (or (= ?obj green_block_1) (ontable green_block_1))) (hold_4)) (when (and (not (or (= ?obj green_block_1) (ontable green_block_1))) (or (= ?obj blue_block_1) (clear blue_block_1))) (not (hold_5))) (when (not (or (= ?obj blue_block_1) (clear blue_block_1))) (hold_5)) (when (or (= ?obj red_block_1) (ontable red_block_1)) (hold_6)) (when (not (or (= ?obj green_block_1) (ontable green_block_1))) (seen_psi_7)) (when (not (or (= ?obj red_block_1) (clear red_block_1))) (hold_8)) (when (and (holding yellow_block_2) (not (= ?obj yellow_block_2))) (seen_psi_9)) (when (and (holding green_block_2) (not (= ?obj green_block_2))) (hold_10)) (when (or (and (holding yellow_block_2) (not (= ?obj yellow_block_2))) (= ?obj yellow_block_1) (ontable yellow_block_1)) (hold_11)) (when (not (or (= ?obj yellow_block_2) (clear yellow_block_2))) (hold_12)) (when (and (not (or (= ?obj yellow_block_2) (clear yellow_block_2))) (not (and (holding green_block_2) (not (= ?obj green_block_2))))) (not (hold_13))) (when (and (holding green_block_2) (not (= ?obj green_block_2))) (hold_13)) (when (or (= ?obj green_block_1) (clear green_block_1)) (hold_14)) (when (and (or (= ?obj yellow_block_2) (clear yellow_block_2)) (not (or (= ?obj yellow_block_1) (clear yellow_block_1)))) (seen_psi_15)) (increase (total-cost) 1)))
 (:action stack
  :parameters ( ?obj - block ?underobj - block)
  :precondition (and (clear ?underobj) (holding ?obj) (or (not (and (holding red_block_1) (not (= ?obj red_block_1)))) (seen_psi_2)) (or (= ?obj red_block_1) (and (clear red_block_1) (not (= ?underobj red_block_1))) (seen_psi_9)) (or (not (or (= ?obj green_block_1) (and (clear green_block_1) (not (= ?underobj green_block_1))))) (seen_psi_15)))
  :effect (and (handempty) (clear ?obj) (on ?obj ?underobj) (not (clear ?underobj)) (not (holding ?obj)) (when (or (and (= ?obj green_block_2) (= ?underobj red_block_2)) (on green_block_2 red_block_2)) (hold_0)) (when (and (holding red_block_1) (not (= ?obj red_block_1))) (hold_1)) (when (or (and (= ?obj red_block_1) (= ?underobj blue_block_1)) (on red_block_1 blue_block_1) (and (= ?obj red_block_2) (= ?underobj green_block_2)) (on red_block_2 green_block_2)) (seen_psi_2)) (when (and (or (and (= ?obj yellow_block_1) (= ?underobj blue_block_1)) (on yellow_block_1 blue_block_1)) (not (ontable red_block_2))) (hold_3)) (when (and (not (ontable green_block_1)) (or (= ?obj blue_block_1) (and (clear blue_block_1) (not (= ?underobj blue_block_1))))) (not (hold_5))) (when (not (or (= ?obj blue_block_1) (and (clear blue_block_1) (not (= ?underobj blue_block_1))))) (hold_5)) (when (not (or (= ?obj red_block_1) (and (clear red_block_1) (not (= ?underobj red_block_1))))) (hold_8)) (when (and (holding yellow_block_2) (not (= ?obj yellow_block_2))) (seen_psi_9)) (when (and (holding green_block_2) (not (= ?obj green_block_2))) (hold_10)) (when (or (and (holding yellow_block_2) (not (= ?obj yellow_block_2))) (ontable yellow_block_1)) (hold_11)) (when (not (or (= ?obj yellow_block_2) (and (clear yellow_block_2) (not (= ?underobj yellow_block_2))))) (hold_12)) (when (and (not (or (= ?obj yellow_block_2) (and (clear yellow_block_2) (not (= ?underobj yellow_block_2))))) (not (and (holding green_block_2) (not (= ?obj green_block_2))))) (not (hold_13))) (when (and (holding green_block_2) (not (= ?obj green_block_2))) (hold_13)) (when (or (= ?obj green_block_1) (and (clear green_block_1) (not (= ?underobj green_block_1)))) (hold_14)) (when (and (or (= ?obj yellow_block_2) (and (clear yellow_block_2) (not (= ?underobj yellow_block_2)))) (not (or (= ?obj yellow_block_1) (and (clear yellow_block_1) (not (= ?underobj yellow_block_1)))))) (seen_psi_15)) (increase (total-cost) 1)))
 (:action unstack
  :parameters ( ?obj - block ?underobj - block)
  :precondition (and (on ?obj ?underobj) (clear ?obj) (handempty) (or (not (or (= ?obj red_block_1) (holding red_block_1))) (seen_psi_2)) (or (= ?underobj red_block_1) (and (clear red_block_1) (not (= ?obj red_block_1))) (seen_psi_9)) (or (not (or (= ?underobj green_block_1) (and (clear green_block_1) (not (= ?obj green_block_1))))) (seen_psi_15)))
  :effect (and (holding ?obj) (clear ?underobj) (not (on ?obj ?underobj)) (not (clear ?obj)) (not (handempty)) (when (and (on green_block_2 red_block_2) (not (and (= ?obj green_block_2) (= ?underobj red_block_2)))) (hold_0)) (when (or (= ?obj red_block_1) (holding red_block_1)) (hold_1)) (when (or (and (on red_block_1 blue_block_1) (not (and (= ?obj red_block_1) (= ?underobj blue_block_1)))) (and (on red_block_2 green_block_2) (not (and (= ?obj red_block_2) (= ?underobj green_block_2))))) (seen_psi_2)) (when (and (on yellow_block_1 blue_block_1) (not (and (= ?obj yellow_block_1) (= ?underobj blue_block_1))) (not (ontable red_block_2))) (hold_3)) (when (and (not (ontable green_block_1)) (or (= ?underobj blue_block_1) (and (clear blue_block_1) (not (= ?obj blue_block_1))))) (not (hold_5))) (when (not (or (= ?underobj blue_block_1) (and (clear blue_block_1) (not (= ?obj blue_block_1))))) (hold_5)) (when (not (or (= ?underobj red_block_1) (and (clear red_block_1) (not (= ?obj red_block_1))))) (hold_8)) (when (or (= ?obj yellow_block_2) (holding yellow_block_2)) (seen_psi_9)) (when (or (= ?obj green_block_2) (holding green_block_2)) (hold_10)) (when (or (= ?obj yellow_block_2) (holding yellow_block_2) (ontable yellow_block_1)) (hold_11)) (when (not (or (= ?underobj yellow_block_2) (and (clear yellow_block_2) (not (= ?obj yellow_block_2))))) (hold_12)) (when (and (not (or (= ?underobj yellow_block_2) (and (clear yellow_block_2) (not (= ?obj yellow_block_2))))) (not (or (= ?obj green_block_2) (holding green_block_2)))) (not (hold_13))) (when (or (= ?obj green_block_2) (holding green_block_2)) (hold_13)) (when (or (= ?underobj green_block_1) (and (clear green_block_1) (not (= ?obj green_block_1)))) (hold_14)) (when (and (or (= ?underobj yellow_block_2) (and (clear yellow_block_2) (not (= ?obj yellow_block_2)))) (not (or (= ?underobj yellow_block_1) (and (clear yellow_block_1) (not (= ?obj yellow_block_1)))))) (seen_psi_15)) (increase (total-cost) 1)))
)
