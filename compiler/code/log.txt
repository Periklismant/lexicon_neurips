problem name = blocksworld-problem

types = [block]

fluents = [
  bool clear[obj=block]
  bool ontable[obj=block]
  bool handempty
  bool holding[obj=block]
  bool on[obj1=block, obj2=block]
]

actions = [
  action pickup(block obj) {
    preconditions = [
      (clear(obj) and ontable(obj) and handempty)
    ]
    effects = [
      holding(obj) := true
      clear(obj) := false
      ontable(obj) := false
      handempty := false
    ]
  }
  action pickup-double(block obj) {
    preconditions = [
      (ontable(obj) and handempty and Exists (block topobj) (on(topobj, obj) and clear(topobj)))
    ]
    effects = [
      holding(obj) := true
      ontable(obj) := false
      handempty := false
      forall block topobj if on(topobj, obj) then clear(topobj) := false
    ]
  }
  action putdown(block obj) {
    preconditions = [
      holding(obj)
    ]
    effects = [
      handempty := true
      ontable(obj) := true
      holding(obj) := false
      forall block topobj if on(topobj, obj) then clear(topobj) := true
    ]
  }
  action stack(block obj, block underobj) {
    preconditions = [
      (clear(underobj) and holding(obj))
    ]
    effects = [
      handempty := true
      on(obj, underobj) := true
      clear(underobj) := false
      holding(obj) := false
      forall block topobj if on(topobj, obj) then clear(topobj) := true
    ]
  }
  action unstack(block obj, block underobj) {
    preconditions = [
      (on(obj, underobj) and clear(obj) and handempty)
    ]
    effects = [
      holding(obj) := true
      clear(underobj) := true
      on(obj, underobj) := false
      clear(obj) := false
      handempty := false
    ]
  }
  action unstack-double(block obj, block underobj) {
    preconditions = [
      (on(obj, underobj) and handempty and Exists (block topobj) (on(topobj, obj) and clear(topobj)))
    ]
    effects = [
      holding(obj) := true
      clear(underobj) := true
      on(obj, underobj) := false
      handempty := false
      forall block topobj if on(topobj, obj) then clear(topobj) := false
    ]
  }
]

objects = [
  block: [green_block_1, brown_block_1, blue_block_1, orange_block_1, blue_block_2, black_block_1, black_block_2, black_block_3]
]

initial fluents default = [
  bool clear[obj=block] := false
  bool ontable[obj=block] := false
  bool handempty := false
  bool holding[obj=block] := false
  bool on[obj1=block, obj2=block] := false
]

initial values = [
  ontable(green_block_1) := true
  ontable(brown_block_1) := true
  ontable(blue_block_1) := true
  on(orange_block_1, blue_block_1) := true
  ontable(blue_block_2) := true
  on(black_block_1, orange_block_1) := true
  on(black_block_2, blue_block_2) := true
  on(black_block_3, black_block_2) := true
  clear(green_block_1) := true
  clear(brown_block_1) := true
  clear(black_block_1) := true
  clear(black_block_3) := true
  handempty := true
]

goals = [
  holding(orange_block_1)
]

trajectory constraints = [
  Sometime(ontable(black_block_1))
]

quality metrics = [
  minimize sequential-plan-length
]


PROBLEM_CLASS: ['ACTION_BASED']
CONDITIONS_KIND: ['EXISTENTIAL_CONDITIONS']
EFFECTS_KIND: ['FORALL_EFFECTS', 'CONDITIONAL_EFFECTS']
TYPING: ['FLAT_TYPING']
QUALITY_METRICS: ['PLAN_LENGTH']
CONSTRAINTS_KIND: ['TRAJECTORY_CONSTRAINTS']
New problem name: MyTrajectoryConstraintsRemover_blocksworld-problem
Sometime constraint: Sometime(ontable(black_block_1))
Formula: ontable(black_block_1).
 Monitoring Atom: hold-0.
 Action: action pickup(block obj) {
    preconditions = [
      (clear(obj) and ontable(obj) and handempty)
    ]
    effects = [
      holding(obj) := true
      clear(obj) := false
      ontable(obj) := false
      handempty := false
    ]
  }.
Trying to unify: holding(obj) and ontable(black_block_1)
Different fluent name or different args
[]
Trying to unify: clear(obj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: ontable(obj) and ontable(black_block_1)
Parameter: obj can be unified with Constraint Object: black_block_1
{obj: black_block_1}
cond is True
Regression: (ontable(black_block_1) and (not (obj == black_block_1))).

Sometime constraint: Sometime(ontable(black_block_1))
Formula: ontable(black_block_1).
 Monitoring Atom: hold-0.
 Action: action pickup-double(block obj) {
    preconditions = [
      (ontable(obj) and handempty and Exists (block topobj) (on(topobj, obj) and clear(topobj)))
    ]
    effects = [
      holding(obj) := true
      ontable(obj) := false
      handempty := false
      forall block topobj if on(topobj, obj) then clear(topobj) := false
    ]
  }.
Trying to unify: holding(obj) and ontable(black_block_1)
Different fluent name or different args
[]
Trying to unify: ontable(obj) and ontable(black_block_1)
Parameter: obj can be unified with Constraint Object: black_block_1
{obj: black_block_1}
cond is True
Regression: (ontable(black_block_1) and (not (obj == black_block_1))).

Sometime constraint: Sometime(ontable(black_block_1))
Formula: ontable(black_block_1).
 Monitoring Atom: hold-0.
 Action: action putdown(block obj) {
    preconditions = [
      holding(obj)
    ]
    effects = [
      handempty := true
      ontable(obj) := true
      holding(obj) := false
      forall block topobj if on(topobj, obj) then clear(topobj) := true
    ]
  }.
Trying to unify: handempty and ontable(black_block_1)
Different fluent name or different args
Trying to unify: ontable(obj) and ontable(black_block_1)
Parameter: obj can be unified with Constraint Object: black_block_1
{obj: black_block_1}
cond is True
Trying to unify: holding(obj) and ontable(black_block_1)
Different fluent name or different args
[]
Regression: ((obj == black_block_1) or ontable(black_block_1)).

Sometime constraint: Sometime(ontable(black_block_1))
Formula: ontable(black_block_1).
 Monitoring Atom: hold-0.
 Action: action stack(block obj, block underobj) {
    preconditions = [
      (clear(underobj) and holding(obj))
    ]
    effects = [
      handempty := true
      on(obj, underobj) := true
      clear(underobj) := false
      holding(obj) := false
      forall block topobj if on(topobj, obj) then clear(topobj) := true
    ]
  }.
Trying to unify: handempty and ontable(black_block_1)
Different fluent name or different args
Trying to unify: on(obj, underobj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: clear(topobj) and ontable(black_block_1)
Different fluent name or different args
[]
Trying to unify: clear(underobj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: holding(obj) and ontable(black_block_1)
Different fluent name or different args
[]
Regression: ontable(black_block_1).

Sometime constraint: Sometime(ontable(black_block_1))
Formula: ontable(black_block_1).
 Monitoring Atom: hold-0.
 Action: action unstack(block obj, block underobj) {
    preconditions = [
      (on(obj, underobj) and clear(obj) and handempty)
    ]
    effects = [
      holding(obj) := true
      clear(underobj) := true
      on(obj, underobj) := false
      clear(obj) := false
      handempty := false
    ]
  }.
Trying to unify: holding(obj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: clear(underobj) and ontable(black_block_1)
Different fluent name or different args
[]
Trying to unify: on(obj, underobj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: clear(obj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: handempty and ontable(black_block_1)
Different fluent name or different args
[]
Regression: ontable(black_block_1).

Sometime constraint: Sometime(ontable(black_block_1))
Formula: ontable(black_block_1).
 Monitoring Atom: hold-0.
 Action: action unstack-double(block obj, block underobj) {
    preconditions = [
      (on(obj, underobj) and handempty and Exists (block topobj) (on(topobj, obj) and clear(topobj)))
    ]
    effects = [
      holding(obj) := true
      clear(underobj) := true
      on(obj, underobj) := false
      handempty := false
      forall block topobj if on(topobj, obj) then clear(topobj) := false
    ]
  }.
Trying to unify: holding(obj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: clear(underobj) and ontable(black_block_1)
Different fluent name or different args
[]
Trying to unify: on(obj, underobj) and ontable(black_block_1)
Different fluent name or different args
Trying to unify: handempty and ontable(black_block_1)
Different fluent name or different args
Trying to unify: clear(topobj) and ontable(black_block_1)
Different fluent name or different args
[]
Regression: ontable(black_block_1).

problem name = MyTrajectoryConstraintsRemover_blocksworld-problem

types = [block]

fluents = [
  bool clear[obj=block]
  bool ontable[obj=block]
  bool handempty
  bool holding[obj=block]
  bool on[obj1=block, obj2=block]
  bool hold-0
]

actions = [
  action pickup(block obj) {
    preconditions = [
      (clear(obj) and ontable(obj) and handempty)
    ]
    effects = [
      holding(obj) := true
      clear(obj) := false
      ontable(obj) := false
      handempty := false
      if (ontable(black_block_1) and (not (obj == black_block_1))) then hold-0 := true
    ]
  }
  action pickup-double(block obj) {
    preconditions = [
      (ontable(obj) and handempty and Exists (block topobj) (on(topobj, obj) and clear(topobj)))
    ]
    effects = [
      holding(obj) := true
      ontable(obj) := false
      handempty := false
      forall block topobj if on(topobj, obj) then clear(topobj) := false
      if (ontable(black_block_1) and (not (obj == black_block_1))) then hold-0 := true
    ]
  }
  action putdown(block obj) {
    preconditions = [
      holding(obj)
    ]
    effects = [
      handempty := true
      ontable(obj) := true
      holding(obj) := false
      forall block topobj if on(topobj, obj) then clear(topobj) := true
      if ((obj == black_block_1) or ontable(black_block_1)) then hold-0 := true
    ]
  }
  action stack(block obj, block underobj) {
    preconditions = [
      (clear(underobj) and holding(obj))
    ]
    effects = [
      handempty := true
      on(obj, underobj) := true
      clear(underobj) := false
      holding(obj) := false
      forall block topobj if on(topobj, obj) then clear(topobj) := true
    ]
  }
  action unstack(block obj, block underobj) {
    preconditions = [
      (on(obj, underobj) and clear(obj) and handempty)
    ]
    effects = [
      holding(obj) := true
      clear(underobj) := true
      on(obj, underobj) := false
      clear(obj) := false
      handempty := false
    ]
  }
  action unstack-double(block obj, block underobj) {
    preconditions = [
      (on(obj, underobj) and handempty and Exists (block topobj) (on(topobj, obj) and clear(topobj)))
    ]
    effects = [
      holding(obj) := true
      clear(underobj) := true
      on(obj, underobj) := false
      handempty := false
      forall block topobj if on(topobj, obj) then clear(topobj) := false
    ]
  }
]

objects = [
  block: [green_block_1, brown_block_1, blue_block_1, orange_block_1, blue_block_2, black_block_1, black_block_2, black_block_3]
]

initial fluents default = [
  bool clear[obj=block] := false
  bool ontable[obj=block] := false
  bool handempty := false
  bool holding[obj=block] := false
  bool on[obj1=block, obj2=block] := false
  bool hold-0 := false
]

initial values = [
  ontable(green_block_1) := true
  ontable(brown_block_1) := true
  ontable(blue_block_1) := true
  on(orange_block_1, blue_block_1) := true
  ontable(blue_block_2) := true
  on(black_block_1, orange_block_1) := true
  on(black_block_2, blue_block_2) := true
  on(black_block_3, black_block_2) := true
  clear(green_block_1) := true
  clear(brown_block_1) := true
  clear(black_block_1) := true
  clear(black_block_3) := true
  handempty := true
  clear(blue_block_1) := false
  clear(orange_block_1) := false
  clear(blue_block_2) := false
  clear(black_block_2) := false
  ontable(orange_block_1) := false
  ontable(black_block_1) := false
  ontable(black_block_2) := false
  ontable(black_block_3) := false
  holding(green_block_1) := false
  holding(brown_block_1) := false
  holding(blue_block_1) := false
  holding(orange_block_1) := false
  holding(blue_block_2) := false
  holding(black_block_1) := false
  holding(black_block_2) := false
  holding(black_block_3) := false
  on(green_block_1, green_block_1) := false
  on(brown_block_1, green_block_1) := false
  on(blue_block_1, green_block_1) := false
  on(orange_block_1, green_block_1) := false
  on(blue_block_2, green_block_1) := false
  on(black_block_1, green_block_1) := false
  on(black_block_2, green_block_1) := false
  on(black_block_3, green_block_1) := false
  on(green_block_1, brown_block_1) := false
  on(brown_block_1, brown_block_1) := false
  on(blue_block_1, brown_block_1) := false
  on(orange_block_1, brown_block_1) := false
  on(blue_block_2, brown_block_1) := false
  on(black_block_1, brown_block_1) := false
  on(black_block_2, brown_block_1) := false
  on(black_block_3, brown_block_1) := false
  on(green_block_1, blue_block_1) := false
  on(brown_block_1, blue_block_1) := false
  on(blue_block_1, blue_block_1) := false
  on(blue_block_2, blue_block_1) := false
  on(black_block_1, blue_block_1) := false
  on(black_block_2, blue_block_1) := false
  on(black_block_3, blue_block_1) := false
  on(green_block_1, orange_block_1) := false
  on(brown_block_1, orange_block_1) := false
  on(blue_block_1, orange_block_1) := false
  on(orange_block_1, orange_block_1) := false
  on(blue_block_2, orange_block_1) := false
  on(black_block_2, orange_block_1) := false
  on(black_block_3, orange_block_1) := false
  on(green_block_1, blue_block_2) := false
  on(brown_block_1, blue_block_2) := false
  on(blue_block_1, blue_block_2) := false
  on(orange_block_1, blue_block_2) := false
  on(blue_block_2, blue_block_2) := false
  on(black_block_1, blue_block_2) := false
  on(black_block_3, blue_block_2) := false
  on(green_block_1, black_block_1) := false
  on(brown_block_1, black_block_1) := false
  on(blue_block_1, black_block_1) := false
  on(orange_block_1, black_block_1) := false
  on(blue_block_2, black_block_1) := false
  on(black_block_1, black_block_1) := false
  on(black_block_2, black_block_1) := false
  on(black_block_3, black_block_1) := false
  on(green_block_1, black_block_2) := false
  on(brown_block_1, black_block_2) := false
  on(blue_block_1, black_block_2) := false
  on(orange_block_1, black_block_2) := false
  on(blue_block_2, black_block_2) := false
  on(black_block_1, black_block_2) := false
  on(black_block_2, black_block_2) := false
  on(green_block_1, black_block_3) := false
  on(brown_block_1, black_block_3) := false
  on(blue_block_1, black_block_3) := false
  on(orange_block_1, black_block_3) := false
  on(blue_block_2, black_block_3) := false
  on(black_block_1, black_block_3) := false
  on(black_block_2, black_block_3) := false
  on(black_block_3, black_block_3) := false
  hold-0 := false
]

goals = [
  (holding(orange_block_1) and hold-0)
]

quality metrics = [
  minimize sequential-plan-length
]


[96m[1mNOTE: To disable printing of planning engine credits, add this line to your code: `up.shortcuts.get_environment().credits_stream = None`
[0m[96m  *** Credits ***
[0m[96m  * In operation mode `OneshotPlanner` at line 59 of `/home/periman/desktop/lifted_compiler/code/trajectory_constraints_remover.py`, [0m[96myou are using the following planning engine:
[0m[96m  * Engine name: SymK
  * Developers:  David Speck (cf. https://github.com/speckdavid/symk/blob/master/README.md )
[0m[96m  * Description: [0m[96mSymK is a state-of-the-art domain-independent optimal and top-k planner.[0m[96m
[0m[96m
[0mNone
Compilation Result: problem: problem name = TrajectoryConstraintsRemover_blocksworld-problem

types = [block]

fluents = [
  bool clear[obj=block]
  bool ontable[obj=block]
  bool handempty
  bool holding[obj=block]
  bool on[obj1=block, obj2=block]
  bool hold-0
]

actions = [
  action pickup_green_block_1 {
    preconditions = [
      clear(green_block_1)
      ontable(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(green_block_1) := false
      ontable(green_block_1) := false
      handempty := false
    ]
  }
  action pickup_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      ontable(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(brown_block_1) := false
      ontable(brown_block_1) := false
      handempty := false
    ]
  }
  action pickup_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      ontable(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(blue_block_1) := false
      ontable(blue_block_1) := false
      handempty := false
    ]
  }
  action pickup_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      ontable(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(orange_block_1) := false
      ontable(orange_block_1) := false
      handempty := false
    ]
  }
  action pickup_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      ontable(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(blue_block_2) := false
      ontable(blue_block_2) := false
      handempty := false
    ]
  }
  action pickup_black_block_1 {
    preconditions = [
      clear(black_block_1)
      ontable(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_1) := false
      ontable(black_block_1) := false
      handempty := false
    ]
  }
  action pickup_black_block_2 {
    preconditions = [
      clear(black_block_2)
      ontable(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_2) := false
      ontable(black_block_2) := false
      handempty := false
    ]
  }
  action pickup_black_block_3 {
    preconditions = [
      clear(black_block_3)
      ontable(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_3) := false
      ontable(black_block_3) := false
      handempty := false
    ]
  }
  action pickup-double_green_block_1 {
    preconditions = [
      ontable(green_block_1)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      ontable(green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action pickup-double_brown_block_1 {
    preconditions = [
      ontable(brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      ontable(brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action pickup-double_blue_block_1 {
    preconditions = [
      ontable(blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      ontable(blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action pickup-double_orange_block_1 {
    preconditions = [
      ontable(orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      ontable(orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action pickup-double_blue_block_2 {
    preconditions = [
      ontable(blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      ontable(blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action pickup-double_black_block_1 {
    preconditions = [
      ontable(black_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      ontable(black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action pickup-double_black_block_2 {
    preconditions = [
      ontable(black_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      ontable(black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action pickup-double_black_block_3 {
    preconditions = [
      ontable(black_block_3)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      ontable(black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action putdown_green_block_1 {
    preconditions = [
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      ontable(green_block_1) := true
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action putdown_brown_block_1 {
    preconditions = [
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      ontable(brown_block_1) := true
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action putdown_blue_block_1 {
    preconditions = [
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      ontable(blue_block_1) := true
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action putdown_orange_block_1 {
    preconditions = [
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      ontable(orange_block_1) := true
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action putdown_blue_block_2 {
    preconditions = [
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      ontable(blue_block_2) := true
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action putdown_black_block_1 {
    preconditions = [
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      ontable(black_block_1) := true
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
      hold-0 := true
    ]
  }
  action putdown_black_block_2 {
    preconditions = [
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      ontable(black_block_2) := true
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action putdown_black_block_3 {
    preconditions = [
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      ontable(black_block_3) := true
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, green_block_1) := true
      clear(green_block_1) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, brown_block_1) := true
      clear(brown_block_1) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, blue_block_1) := true
      clear(blue_block_1) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, orange_block_1) := true
      clear(orange_block_1) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, blue_block_2) := true
      clear(blue_block_2) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, black_block_1) := true
      clear(black_block_1) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, black_block_2) := true
      clear(black_block_2) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_green_block_1_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(green_block_1)
    ]
    effects = [
      handempty := true
      on(green_block_1, black_block_3) := true
      clear(black_block_3) := false
      holding(green_block_1) := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, green_block_1) := true
      clear(green_block_1) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, brown_block_1) := true
      clear(brown_block_1) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, blue_block_1) := true
      clear(blue_block_1) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, orange_block_1) := true
      clear(orange_block_1) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, blue_block_2) := true
      clear(blue_block_2) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, black_block_1) := true
      clear(black_block_1) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, black_block_2) := true
      clear(black_block_2) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_brown_block_1_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(brown_block_1)
    ]
    effects = [
      handempty := true
      on(brown_block_1, black_block_3) := true
      clear(black_block_3) := false
      holding(brown_block_1) := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, green_block_1) := true
      clear(green_block_1) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, brown_block_1) := true
      clear(brown_block_1) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, blue_block_1) := true
      clear(blue_block_1) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, orange_block_1) := true
      clear(orange_block_1) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, blue_block_2) := true
      clear(blue_block_2) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, black_block_1) := true
      clear(black_block_1) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, black_block_2) := true
      clear(black_block_2) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_1_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(blue_block_1)
    ]
    effects = [
      handempty := true
      on(blue_block_1, black_block_3) := true
      clear(black_block_3) := false
      holding(blue_block_1) := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, green_block_1) := true
      clear(green_block_1) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, brown_block_1) := true
      clear(brown_block_1) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, blue_block_1) := true
      clear(blue_block_1) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, orange_block_1) := true
      clear(orange_block_1) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, blue_block_2) := true
      clear(blue_block_2) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, black_block_1) := true
      clear(black_block_1) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, black_block_2) := true
      clear(black_block_2) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_orange_block_1_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(orange_block_1)
    ]
    effects = [
      handempty := true
      on(orange_block_1, black_block_3) := true
      clear(black_block_3) := false
      holding(orange_block_1) := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, green_block_1) := true
      clear(green_block_1) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, brown_block_1) := true
      clear(brown_block_1) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, blue_block_1) := true
      clear(blue_block_1) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, orange_block_1) := true
      clear(orange_block_1) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, blue_block_2) := true
      clear(blue_block_2) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, black_block_1) := true
      clear(black_block_1) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, black_block_2) := true
      clear(black_block_2) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_blue_block_2_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(blue_block_2)
    ]
    effects = [
      handempty := true
      on(blue_block_2, black_block_3) := true
      clear(black_block_3) := false
      holding(blue_block_2) := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, green_block_1) := true
      clear(green_block_1) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, brown_block_1) := true
      clear(brown_block_1) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, blue_block_1) := true
      clear(blue_block_1) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, orange_block_1) := true
      clear(orange_block_1) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, blue_block_2) := true
      clear(blue_block_2) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, black_block_1) := true
      clear(black_block_1) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, black_block_2) := true
      clear(black_block_2) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_1_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(black_block_1)
    ]
    effects = [
      handempty := true
      on(black_block_1, black_block_3) := true
      clear(black_block_3) := false
      holding(black_block_1) := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, green_block_1) := true
      clear(green_block_1) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, brown_block_1) := true
      clear(brown_block_1) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, blue_block_1) := true
      clear(blue_block_1) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, orange_block_1) := true
      clear(orange_block_1) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, blue_block_2) := true
      clear(blue_block_2) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, black_block_1) := true
      clear(black_block_1) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, black_block_2) := true
      clear(black_block_2) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_2_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(black_block_2)
    ]
    effects = [
      handempty := true
      on(black_block_2, black_block_3) := true
      clear(black_block_3) := false
      holding(black_block_2) := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_green_block_1 {
    preconditions = [
      clear(green_block_1)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, green_block_1) := true
      clear(green_block_1) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_brown_block_1 {
    preconditions = [
      clear(brown_block_1)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, brown_block_1) := true
      clear(brown_block_1) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_blue_block_1 {
    preconditions = [
      clear(blue_block_1)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, blue_block_1) := true
      clear(blue_block_1) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_orange_block_1 {
    preconditions = [
      clear(orange_block_1)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, orange_block_1) := true
      clear(orange_block_1) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_blue_block_2 {
    preconditions = [
      clear(blue_block_2)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, blue_block_2) := true
      clear(blue_block_2) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_black_block_1 {
    preconditions = [
      clear(black_block_1)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, black_block_1) := true
      clear(black_block_1) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_black_block_2 {
    preconditions = [
      clear(black_block_2)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, black_block_2) := true
      clear(black_block_2) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action stack_black_block_3_black_block_3 {
    preconditions = [
      clear(black_block_3)
      holding(black_block_3)
    ]
    effects = [
      handempty := true
      on(black_block_3, black_block_3) := true
      clear(black_block_3) := false
      holding(black_block_3) := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := true
    ]
  }
  action unstack_green_block_1_green_block_1 {
    preconditions = [
      on(green_block_1, green_block_1)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(green_block_1) := true
      on(green_block_1, green_block_1) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_brown_block_1 {
    preconditions = [
      on(green_block_1, brown_block_1)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(brown_block_1) := true
      on(green_block_1, brown_block_1) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_blue_block_1 {
    preconditions = [
      on(green_block_1, blue_block_1)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(blue_block_1) := true
      on(green_block_1, blue_block_1) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_orange_block_1 {
    preconditions = [
      on(green_block_1, orange_block_1)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(orange_block_1) := true
      on(green_block_1, orange_block_1) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_blue_block_2 {
    preconditions = [
      on(green_block_1, blue_block_2)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(blue_block_2) := true
      on(green_block_1, blue_block_2) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_black_block_1 {
    preconditions = [
      on(green_block_1, black_block_1)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(black_block_1) := true
      on(green_block_1, black_block_1) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_black_block_2 {
    preconditions = [
      on(green_block_1, black_block_2)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(black_block_2) := true
      on(green_block_1, black_block_2) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_green_block_1_black_block_3 {
    preconditions = [
      on(green_block_1, black_block_3)
      clear(green_block_1)
      handempty
    ]
    effects = [
      holding(green_block_1) := true
      clear(black_block_3) := true
      on(green_block_1, black_block_3) := false
      clear(green_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_green_block_1 {
    preconditions = [
      on(brown_block_1, green_block_1)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(green_block_1) := true
      on(brown_block_1, green_block_1) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_brown_block_1 {
    preconditions = [
      on(brown_block_1, brown_block_1)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(brown_block_1) := true
      on(brown_block_1, brown_block_1) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_blue_block_1 {
    preconditions = [
      on(brown_block_1, blue_block_1)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(blue_block_1) := true
      on(brown_block_1, blue_block_1) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_orange_block_1 {
    preconditions = [
      on(brown_block_1, orange_block_1)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(orange_block_1) := true
      on(brown_block_1, orange_block_1) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_blue_block_2 {
    preconditions = [
      on(brown_block_1, blue_block_2)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(blue_block_2) := true
      on(brown_block_1, blue_block_2) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_black_block_1 {
    preconditions = [
      on(brown_block_1, black_block_1)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(black_block_1) := true
      on(brown_block_1, black_block_1) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_black_block_2 {
    preconditions = [
      on(brown_block_1, black_block_2)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(black_block_2) := true
      on(brown_block_1, black_block_2) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_brown_block_1_black_block_3 {
    preconditions = [
      on(brown_block_1, black_block_3)
      clear(brown_block_1)
      handempty
    ]
    effects = [
      holding(brown_block_1) := true
      clear(black_block_3) := true
      on(brown_block_1, black_block_3) := false
      clear(brown_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_green_block_1 {
    preconditions = [
      on(blue_block_1, green_block_1)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(green_block_1) := true
      on(blue_block_1, green_block_1) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_brown_block_1 {
    preconditions = [
      on(blue_block_1, brown_block_1)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(brown_block_1) := true
      on(blue_block_1, brown_block_1) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_blue_block_1 {
    preconditions = [
      on(blue_block_1, blue_block_1)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(blue_block_1) := true
      on(blue_block_1, blue_block_1) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_orange_block_1 {
    preconditions = [
      on(blue_block_1, orange_block_1)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(orange_block_1) := true
      on(blue_block_1, orange_block_1) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_blue_block_2 {
    preconditions = [
      on(blue_block_1, blue_block_2)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(blue_block_2) := true
      on(blue_block_1, blue_block_2) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_black_block_1 {
    preconditions = [
      on(blue_block_1, black_block_1)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(black_block_1) := true
      on(blue_block_1, black_block_1) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_black_block_2 {
    preconditions = [
      on(blue_block_1, black_block_2)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(black_block_2) := true
      on(blue_block_1, black_block_2) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_1_black_block_3 {
    preconditions = [
      on(blue_block_1, black_block_3)
      clear(blue_block_1)
      handempty
    ]
    effects = [
      holding(blue_block_1) := true
      clear(black_block_3) := true
      on(blue_block_1, black_block_3) := false
      clear(blue_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_green_block_1 {
    preconditions = [
      on(orange_block_1, green_block_1)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(green_block_1) := true
      on(orange_block_1, green_block_1) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_brown_block_1 {
    preconditions = [
      on(orange_block_1, brown_block_1)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(brown_block_1) := true
      on(orange_block_1, brown_block_1) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_blue_block_1 {
    preconditions = [
      on(orange_block_1, blue_block_1)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(blue_block_1) := true
      on(orange_block_1, blue_block_1) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_orange_block_1 {
    preconditions = [
      on(orange_block_1, orange_block_1)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(orange_block_1) := true
      on(orange_block_1, orange_block_1) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_blue_block_2 {
    preconditions = [
      on(orange_block_1, blue_block_2)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(blue_block_2) := true
      on(orange_block_1, blue_block_2) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_black_block_1 {
    preconditions = [
      on(orange_block_1, black_block_1)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(black_block_1) := true
      on(orange_block_1, black_block_1) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_black_block_2 {
    preconditions = [
      on(orange_block_1, black_block_2)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(black_block_2) := true
      on(orange_block_1, black_block_2) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_orange_block_1_black_block_3 {
    preconditions = [
      on(orange_block_1, black_block_3)
      clear(orange_block_1)
      handempty
    ]
    effects = [
      holding(orange_block_1) := true
      clear(black_block_3) := true
      on(orange_block_1, black_block_3) := false
      clear(orange_block_1) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_green_block_1 {
    preconditions = [
      on(blue_block_2, green_block_1)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(green_block_1) := true
      on(blue_block_2, green_block_1) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_brown_block_1 {
    preconditions = [
      on(blue_block_2, brown_block_1)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(brown_block_1) := true
      on(blue_block_2, brown_block_1) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_blue_block_1 {
    preconditions = [
      on(blue_block_2, blue_block_1)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(blue_block_1) := true
      on(blue_block_2, blue_block_1) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_orange_block_1 {
    preconditions = [
      on(blue_block_2, orange_block_1)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(orange_block_1) := true
      on(blue_block_2, orange_block_1) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_blue_block_2 {
    preconditions = [
      on(blue_block_2, blue_block_2)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(blue_block_2) := true
      on(blue_block_2, blue_block_2) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_black_block_1 {
    preconditions = [
      on(blue_block_2, black_block_1)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(black_block_1) := true
      on(blue_block_2, black_block_1) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_black_block_2 {
    preconditions = [
      on(blue_block_2, black_block_2)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(black_block_2) := true
      on(blue_block_2, black_block_2) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_blue_block_2_black_block_3 {
    preconditions = [
      on(blue_block_2, black_block_3)
      clear(blue_block_2)
      handempty
    ]
    effects = [
      holding(blue_block_2) := true
      clear(black_block_3) := true
      on(blue_block_2, black_block_3) := false
      clear(blue_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_green_block_1 {
    preconditions = [
      on(black_block_1, green_block_1)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(green_block_1) := true
      on(black_block_1, green_block_1) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_brown_block_1 {
    preconditions = [
      on(black_block_1, brown_block_1)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(brown_block_1) := true
      on(black_block_1, brown_block_1) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_blue_block_1 {
    preconditions = [
      on(black_block_1, blue_block_1)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(blue_block_1) := true
      on(black_block_1, blue_block_1) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_orange_block_1 {
    preconditions = [
      on(black_block_1, orange_block_1)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(orange_block_1) := true
      on(black_block_1, orange_block_1) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_blue_block_2 {
    preconditions = [
      on(black_block_1, blue_block_2)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(blue_block_2) := true
      on(black_block_1, blue_block_2) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_black_block_1 {
    preconditions = [
      on(black_block_1, black_block_1)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_1) := true
      on(black_block_1, black_block_1) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_black_block_2 {
    preconditions = [
      on(black_block_1, black_block_2)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_2) := true
      on(black_block_1, black_block_2) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_1_black_block_3 {
    preconditions = [
      on(black_block_1, black_block_3)
      clear(black_block_1)
      handempty
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_3) := true
      on(black_block_1, black_block_3) := false
      clear(black_block_1) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_green_block_1 {
    preconditions = [
      on(black_block_2, green_block_1)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(green_block_1) := true
      on(black_block_2, green_block_1) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_brown_block_1 {
    preconditions = [
      on(black_block_2, brown_block_1)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(brown_block_1) := true
      on(black_block_2, brown_block_1) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_blue_block_1 {
    preconditions = [
      on(black_block_2, blue_block_1)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(blue_block_1) := true
      on(black_block_2, blue_block_1) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_orange_block_1 {
    preconditions = [
      on(black_block_2, orange_block_1)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(orange_block_1) := true
      on(black_block_2, orange_block_1) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_blue_block_2 {
    preconditions = [
      on(black_block_2, blue_block_2)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(blue_block_2) := true
      on(black_block_2, blue_block_2) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_black_block_1 {
    preconditions = [
      on(black_block_2, black_block_1)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_1) := true
      on(black_block_2, black_block_1) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_black_block_2 {
    preconditions = [
      on(black_block_2, black_block_2)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_2) := true
      on(black_block_2, black_block_2) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_2_black_block_3 {
    preconditions = [
      on(black_block_2, black_block_3)
      clear(black_block_2)
      handempty
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_3) := true
      on(black_block_2, black_block_3) := false
      clear(black_block_2) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_green_block_1 {
    preconditions = [
      on(black_block_3, green_block_1)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(green_block_1) := true
      on(black_block_3, green_block_1) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_brown_block_1 {
    preconditions = [
      on(black_block_3, brown_block_1)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(brown_block_1) := true
      on(black_block_3, brown_block_1) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_blue_block_1 {
    preconditions = [
      on(black_block_3, blue_block_1)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(blue_block_1) := true
      on(black_block_3, blue_block_1) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_orange_block_1 {
    preconditions = [
      on(black_block_3, orange_block_1)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(orange_block_1) := true
      on(black_block_3, orange_block_1) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_blue_block_2 {
    preconditions = [
      on(black_block_3, blue_block_2)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(blue_block_2) := true
      on(black_block_3, blue_block_2) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_black_block_1 {
    preconditions = [
      on(black_block_3, black_block_1)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_1) := true
      on(black_block_3, black_block_1) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_black_block_2 {
    preconditions = [
      on(black_block_3, black_block_2)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_2) := true
      on(black_block_3, black_block_2) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack_black_block_3_black_block_3 {
    preconditions = [
      on(black_block_3, black_block_3)
      clear(black_block_3)
      handempty
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_3) := true
      on(black_block_3, black_block_3) := false
      clear(black_block_3) := false
      handempty := false
    ]
  }
  action unstack-double_green_block_1_green_block_1 {
    preconditions = [
      on(green_block_1, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(green_block_1) := true
      on(green_block_1, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_brown_block_1 {
    preconditions = [
      on(green_block_1, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(brown_block_1) := true
      on(green_block_1, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_blue_block_1 {
    preconditions = [
      on(green_block_1, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(blue_block_1) := true
      on(green_block_1, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_orange_block_1 {
    preconditions = [
      on(green_block_1, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(orange_block_1) := true
      on(green_block_1, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_blue_block_2 {
    preconditions = [
      on(green_block_1, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(blue_block_2) := true
      on(green_block_1, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_black_block_1 {
    preconditions = [
      on(green_block_1, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(black_block_1) := true
      on(green_block_1, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_black_block_2 {
    preconditions = [
      on(green_block_1, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(black_block_2) := true
      on(green_block_1, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_green_block_1_black_block_3 {
    preconditions = [
      on(green_block_1, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, green_block_1) and clear(topobj))
    ]
    effects = [
      holding(green_block_1) := true
      clear(black_block_3) := true
      on(green_block_1, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, green_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_green_block_1 {
    preconditions = [
      on(brown_block_1, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(green_block_1) := true
      on(brown_block_1, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_brown_block_1 {
    preconditions = [
      on(brown_block_1, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(brown_block_1) := true
      on(brown_block_1, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_blue_block_1 {
    preconditions = [
      on(brown_block_1, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(blue_block_1) := true
      on(brown_block_1, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_orange_block_1 {
    preconditions = [
      on(brown_block_1, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(orange_block_1) := true
      on(brown_block_1, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_blue_block_2 {
    preconditions = [
      on(brown_block_1, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(blue_block_2) := true
      on(brown_block_1, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_black_block_1 {
    preconditions = [
      on(brown_block_1, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(black_block_1) := true
      on(brown_block_1, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_black_block_2 {
    preconditions = [
      on(brown_block_1, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(black_block_2) := true
      on(brown_block_1, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_brown_block_1_black_block_3 {
    preconditions = [
      on(brown_block_1, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, brown_block_1) and clear(topobj))
    ]
    effects = [
      holding(brown_block_1) := true
      clear(black_block_3) := true
      on(brown_block_1, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, brown_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_green_block_1 {
    preconditions = [
      on(blue_block_1, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(green_block_1) := true
      on(blue_block_1, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_brown_block_1 {
    preconditions = [
      on(blue_block_1, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(brown_block_1) := true
      on(blue_block_1, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_blue_block_1 {
    preconditions = [
      on(blue_block_1, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(blue_block_1) := true
      on(blue_block_1, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_orange_block_1 {
    preconditions = [
      on(blue_block_1, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(orange_block_1) := true
      on(blue_block_1, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_blue_block_2 {
    preconditions = [
      on(blue_block_1, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(blue_block_2) := true
      on(blue_block_1, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_black_block_1 {
    preconditions = [
      on(blue_block_1, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(black_block_1) := true
      on(blue_block_1, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_black_block_2 {
    preconditions = [
      on(blue_block_1, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(black_block_2) := true
      on(blue_block_1, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_1_black_block_3 {
    preconditions = [
      on(blue_block_1, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, blue_block_1) and clear(topobj))
    ]
    effects = [
      holding(blue_block_1) := true
      clear(black_block_3) := true
      on(blue_block_1, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_green_block_1 {
    preconditions = [
      on(orange_block_1, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(green_block_1) := true
      on(orange_block_1, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_brown_block_1 {
    preconditions = [
      on(orange_block_1, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(brown_block_1) := true
      on(orange_block_1, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_blue_block_1 {
    preconditions = [
      on(orange_block_1, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(blue_block_1) := true
      on(orange_block_1, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_orange_block_1 {
    preconditions = [
      on(orange_block_1, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(orange_block_1) := true
      on(orange_block_1, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_blue_block_2 {
    preconditions = [
      on(orange_block_1, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(blue_block_2) := true
      on(orange_block_1, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_black_block_1 {
    preconditions = [
      on(orange_block_1, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(black_block_1) := true
      on(orange_block_1, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_black_block_2 {
    preconditions = [
      on(orange_block_1, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(black_block_2) := true
      on(orange_block_1, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_orange_block_1_black_block_3 {
    preconditions = [
      on(orange_block_1, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, orange_block_1) and clear(topobj))
    ]
    effects = [
      holding(orange_block_1) := true
      clear(black_block_3) := true
      on(orange_block_1, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, orange_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_green_block_1 {
    preconditions = [
      on(blue_block_2, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(green_block_1) := true
      on(blue_block_2, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_brown_block_1 {
    preconditions = [
      on(blue_block_2, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(brown_block_1) := true
      on(blue_block_2, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_blue_block_1 {
    preconditions = [
      on(blue_block_2, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(blue_block_1) := true
      on(blue_block_2, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_orange_block_1 {
    preconditions = [
      on(blue_block_2, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(orange_block_1) := true
      on(blue_block_2, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_blue_block_2 {
    preconditions = [
      on(blue_block_2, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(blue_block_2) := true
      on(blue_block_2, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_black_block_1 {
    preconditions = [
      on(blue_block_2, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(black_block_1) := true
      on(blue_block_2, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_black_block_2 {
    preconditions = [
      on(blue_block_2, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(black_block_2) := true
      on(blue_block_2, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_blue_block_2_black_block_3 {
    preconditions = [
      on(blue_block_2, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, blue_block_2) and clear(topobj))
    ]
    effects = [
      holding(blue_block_2) := true
      clear(black_block_3) := true
      on(blue_block_2, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, blue_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_green_block_1 {
    preconditions = [
      on(black_block_1, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(green_block_1) := true
      on(black_block_1, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_brown_block_1 {
    preconditions = [
      on(black_block_1, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(brown_block_1) := true
      on(black_block_1, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_blue_block_1 {
    preconditions = [
      on(black_block_1, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(blue_block_1) := true
      on(black_block_1, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_orange_block_1 {
    preconditions = [
      on(black_block_1, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(orange_block_1) := true
      on(black_block_1, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_blue_block_2 {
    preconditions = [
      on(black_block_1, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(blue_block_2) := true
      on(black_block_1, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_black_block_1 {
    preconditions = [
      on(black_block_1, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_1) := true
      on(black_block_1, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_black_block_2 {
    preconditions = [
      on(black_block_1, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_2) := true
      on(black_block_1, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_1_black_block_3 {
    preconditions = [
      on(black_block_1, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, black_block_1) and clear(topobj))
    ]
    effects = [
      holding(black_block_1) := true
      clear(black_block_3) := true
      on(black_block_1, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, black_block_1) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_green_block_1 {
    preconditions = [
      on(black_block_2, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(green_block_1) := true
      on(black_block_2, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_brown_block_1 {
    preconditions = [
      on(black_block_2, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(brown_block_1) := true
      on(black_block_2, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_blue_block_1 {
    preconditions = [
      on(black_block_2, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(blue_block_1) := true
      on(black_block_2, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_orange_block_1 {
    preconditions = [
      on(black_block_2, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(orange_block_1) := true
      on(black_block_2, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_blue_block_2 {
    preconditions = [
      on(black_block_2, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(blue_block_2) := true
      on(black_block_2, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_black_block_1 {
    preconditions = [
      on(black_block_2, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_1) := true
      on(black_block_2, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_black_block_2 {
    preconditions = [
      on(black_block_2, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_2) := true
      on(black_block_2, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_2_black_block_3 {
    preconditions = [
      on(black_block_2, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, black_block_2) and clear(topobj))
    ]
    effects = [
      holding(black_block_2) := true
      clear(black_block_3) := true
      on(black_block_2, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, black_block_2) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_green_block_1 {
    preconditions = [
      on(black_block_3, green_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(green_block_1) := true
      on(black_block_3, green_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_brown_block_1 {
    preconditions = [
      on(black_block_3, brown_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(brown_block_1) := true
      on(black_block_3, brown_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_blue_block_1 {
    preconditions = [
      on(black_block_3, blue_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(blue_block_1) := true
      on(black_block_3, blue_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_orange_block_1 {
    preconditions = [
      on(black_block_3, orange_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(orange_block_1) := true
      on(black_block_3, orange_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_blue_block_2 {
    preconditions = [
      on(black_block_3, blue_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(blue_block_2) := true
      on(black_block_3, blue_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_black_block_1 {
    preconditions = [
      on(black_block_3, black_block_1)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_1) := true
      on(black_block_3, black_block_1) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_black_block_2 {
    preconditions = [
      on(black_block_3, black_block_2)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_2) := true
      on(black_block_3, black_block_2) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
  action unstack-double_black_block_3_black_block_3 {
    preconditions = [
      on(black_block_3, black_block_3)
      handempty
      Exists (block topobj) (on(topobj, black_block_3) and clear(topobj))
    ]
    effects = [
      holding(black_block_3) := true
      clear(black_block_3) := true
      on(black_block_3, black_block_3) := false
      handempty := false
      forall block topobj if on(topobj, black_block_3) then clear(topobj) := false
    ]
  }
]

objects = [
  block: [green_block_1, brown_block_1, blue_block_1, orange_block_1, blue_block_2, black_block_1, black_block_2, black_block_3]
]

initial fluents default = [
  bool clear[obj=block] := false
  bool ontable[obj=block] := false
  bool handempty := false
  bool holding[obj=block] := false
  bool on[obj1=block, obj2=block] := false
  bool hold-0 := false
]

initial values = [
  ontable(green_block_1) := true
  ontable(brown_block_1) := true
  ontable(blue_block_1) := true
  on(orange_block_1, blue_block_1) := true
  ontable(blue_block_2) := true
  on(black_block_1, orange_block_1) := true
  on(black_block_2, blue_block_2) := true
  on(black_block_3, black_block_2) := true
  clear(green_block_1) := true
  clear(brown_block_1) := true
  clear(black_block_1) := true
  clear(black_block_3) := true
  handempty := true
  clear(blue_block_1) := false
  clear(orange_block_1) := false
  clear(blue_block_2) := false
  clear(black_block_2) := false
  ontable(orange_block_1) := false
  ontable(black_block_1) := false
  ontable(black_block_2) := false
  ontable(black_block_3) := false
  holding(green_block_1) := false
  holding(brown_block_1) := false
  holding(blue_block_1) := false
  holding(orange_block_1) := false
  holding(blue_block_2) := false
  holding(black_block_1) := false
  holding(black_block_2) := false
  holding(black_block_3) := false
  on(green_block_1, green_block_1) := false
  on(brown_block_1, green_block_1) := false
  on(blue_block_1, green_block_1) := false
  on(orange_block_1, green_block_1) := false
  on(blue_block_2, green_block_1) := false
  on(black_block_1, green_block_1) := false
  on(black_block_2, green_block_1) := false
  on(black_block_3, green_block_1) := false
  on(green_block_1, brown_block_1) := false
  on(brown_block_1, brown_block_1) := false
  on(blue_block_1, brown_block_1) := false
  on(orange_block_1, brown_block_1) := false
  on(blue_block_2, brown_block_1) := false
  on(black_block_1, brown_block_1) := false
  on(black_block_2, brown_block_1) := false
  on(black_block_3, brown_block_1) := false
  on(green_block_1, blue_block_1) := false
  on(brown_block_1, blue_block_1) := false
  on(blue_block_1, blue_block_1) := false
  on(blue_block_2, blue_block_1) := false
  on(black_block_1, blue_block_1) := false
  on(black_block_2, blue_block_1) := false
  on(black_block_3, blue_block_1) := false
  on(green_block_1, orange_block_1) := false
  on(brown_block_1, orange_block_1) := false
  on(blue_block_1, orange_block_1) := false
  on(orange_block_1, orange_block_1) := false
  on(blue_block_2, orange_block_1) := false
  on(black_block_2, orange_block_1) := false
  on(black_block_3, orange_block_1) := false
  on(green_block_1, blue_block_2) := false
  on(brown_block_1, blue_block_2) := false
  on(blue_block_1, blue_block_2) := false
  on(orange_block_1, blue_block_2) := false
  on(blue_block_2, blue_block_2) := false
  on(black_block_1, blue_block_2) := false
  on(black_block_3, blue_block_2) := false
  on(green_block_1, black_block_1) := false
  on(brown_block_1, black_block_1) := false
  on(blue_block_1, black_block_1) := false
  on(orange_block_1, black_block_1) := false
  on(blue_block_2, black_block_1) := false
  on(black_block_1, black_block_1) := false
  on(black_block_2, black_block_1) := false
  on(black_block_3, black_block_1) := false
  on(green_block_1, black_block_2) := false
  on(brown_block_1, black_block_2) := false
  on(blue_block_1, black_block_2) := false
  on(orange_block_1, black_block_2) := false
  on(blue_block_2, black_block_2) := false
  on(black_block_1, black_block_2) := false
  on(black_block_2, black_block_2) := false
  on(green_block_1, black_block_3) := false
  on(brown_block_1, black_block_3) := false
  on(blue_block_1, black_block_3) := false
  on(orange_block_1, black_block_3) := false
  on(blue_block_2, black_block_3) := false
  on(black_block_1, black_block_3) := false
  on(black_block_2, black_block_3) := false
  on(black_block_3, black_block_3) := false
  hold-0 := false
]

goals = [
  (holding(orange_block_1) and hold-0)
]

quality metrics = [
  minimize sequential-plan-length
]


engine: TrajectoryConstraintsRemover
[96m  *** Credits ***
[0m[96m  * In operation mode `OneshotPlanner` at line 88 of `/home/periman/desktop/lifted_compiler/code/trajectory_constraints_remover.py`, [0m[96myou are using the following planning engine:
[0m[96m  * Engine name: SymK
  * Developers:  David Speck (cf. https://github.com/speckdavid/symk/blob/master/README.md )
[0m[96m  * Description: [0m[96mSymK is a state-of-the-art domain-independent optimal and top-k planner.[0m[96m
[0m[96m
[0mNone
